import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*
 
var Number defaultTemp = 17
var Number minTemp = 9
var Number nightTemp = 14
var Number previousTemp

rule "heatingOnWeekdayMornings"
when
        Time cron "0 20 6 ? * MON-FRI"
then
        if (Auto_Away.state != ON && Manual_Away.state != ON) {
            logInfo("heating.rules", "weekday morning - heating on")
            sendCommand(Temp_Desired_Thermostat, defaultTemp)
            previousTemp = Temp_Desired_Thermostat.state
        }
        postUpdate(Heating_Boost, OFF)
end

/*
*rule "heatingOffWeekdayMornings"
*when
*        Time cron "0 0 8 ? * MON-FRI"
*then
*        sendCommand(Temp_Desired_Thermostat, minTemp)
*        previousTemp = Temp_Desired_Thermostat.state
*        postUpdate(Heating_Boost, OFF)
*end
*
*rule "heatingOnWeekdayEvenings"
*when
*        Time cron "0 0 16 ? * MON-FRI"
*then
*        if (Auto_Away.state != ON && Manual_Away.state != ON) {
*            logInfo("heating.rules", "weekday evening - turn heating up")
*            sendCommand(Temp_Desired_Thermostat, defaultTemp)
*            previousTemp = Temp_Desired_Thermostat.state
*        }
*        else {
*            logInfo("heating.rules", "weekday evening - heating not turned up - away")
*            logInfo("heating.rules", "weekday evening - auto away = " + Auto_Away.state)
*            logInfo("heating.rules", "weekday evening - manual away = " + Manual_Away.state)
*        }
*        postUpdate(Heating_Boost, OFF)
*end
*/

rule "heatingOffWeekdayEvenings"
when
        Time cron "0 45 21 ? * MON-FRI"
then
        if (Auto_Away.state != ON && Manual_Away.state != ON) {
            logInfo("heating.rules", "weekday evening - heating down")
            sendCommand(Temp_Desired_Thermostat, nightTemp)
            previousTemp = Temp_Desired_Thermostat.state
        }
        postUpdate(Heating_Boost, OFF)
end

rule "heatingOnWeekendMornings"
when
        Time cron "0 15 8 ? * SAT-SUN"
then
        if (Auto_Away.state != ON && Manual_Away.state != ON) {
            logInfo("heating.rules", "weekend morning - heating on")
            sendCommand(Temp_Desired_Thermostat, defaultTemp)
            previousTemp = Temp_Desired_Thermostat.state
        }
        postUpdate(Heating_Boost, OFF)
end

/*
*rule "heatingOffWeekendMornings"
*when
*        Time cron "0 30 10 ? * SAT-SUN"
*then
*        sendCommand(Temp_Desired_Thermostat, minTemp)
*        previousTemp = Temp_Desired_Thermostat.state
*        postUpdate(Heating_Boost, OFF)
*end
*
*rule "heatingOnWeekendEvenings"
*when
*        Time cron "0 30 16 ? * SAT-SUN"
*then
*        if (Auto_Away.state != ON && Manual_Away.state != ON) {
*            sendCommand(Temp_Desired_Thermostat, defaultTemp)
*            previousTemp = Temp_Desired_Thermostat.state
*        }
*        postUpdate(Heating_Boost, OFF)
*end
*/

rule "heatingOffWeekendEvenings"
when
        Time cron "0 10 22 ? * SAT-SUN"
then
        if (Auto_Away.state != ON && Manual_Away.state != ON) {
            logInfo("heating.rules", "weekend evening - heating down")
            sendCommand(Temp_Desired_Thermostat, nightTemp)
            previousTemp = Temp_Desired_Thermostat.state
        }
        postUpdate(Heating_Boost, OFF)
end

rule "heatingOffWhenAway"
when
        Item Manual_Away changed to ON or
        Item Auto_Away changed to ON
then
        logInfo("heating.rules", "state changed to away - turning down heating")
        previousTemp = Temp_Desired_Thermostat.state
        logInfo("heating.rules", "previous temp was " + previousTemp)
        sendCommand(Temp_Desired_Thermostat, minTemp)
        postUpdate(Heating_Boost, OFF)
        notifyMyAndroid("Away", "Away changed to " + Auto_Away.state)
end

rule "heatingBoost"
when 
        Item Heating_Boost changed to ON
then
        previousTemp = Temp_Desired_Thermostat.state
        logInfo("heating.rules", "heating boost triggered - was set to " + previousTemp)
        sendCommand(Temp_Desired_Thermostat, 21)
end

rule "reset heating"
when
        Item Manual_Away changed to OFF or
        Item Auto_Away changed to OFF or
        Item Heating_Boost changed to OFF
then
        logInfo("heating.rules", "restoring heating to " + previousTemp)
        sendCommand(Temp_Desired_Thermostat, previousTemp)
        notifyMyAndroid("Away", "Away changed to " + Auto_Away.state)
end

